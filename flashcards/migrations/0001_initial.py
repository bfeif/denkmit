# Generated by Django 3.2 on 2021-05-06 21:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Noun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('noun_de', models.CharField(max_length=20)),
                ('noun_en', models.CharField(max_length=20)),
                ('noun_de_pl', models.CharField(max_length=20)),
                ('noun_en_pl', models.CharField(default='temporary', max_length=20)),
                ('pluralization_model', models.CharField(max_length=20)),
                ('gender', models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Verb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verb_de', models.CharField(max_length=20)),
                ('verb_en', models.CharField(max_length=20)),
                ('infinitive_de', models.CharField(default='temporary', max_length=20)),
                ('mood', models.CharField(max_length=10)),
                ('tense', models.CharField(max_length=10)),
                ('subject', models.CharField(max_length=10)),
                ('valency', models.IntegerField()),
            ],
            options={
                'unique_together': {('infinitive_de', 'mood', 'tense', 'subject')},
            },
        ),
        migrations.CreateModel(
            name='PersonalPronoun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pronoun_de', models.CharField(max_length=20)),
                ('pronoun_en', models.CharField(max_length=20)),
                ('case', models.CharField(max_length=3)),
                ('nom_pronoun_de', models.CharField(default='temporary', max_length=10)),
                ('person', models.IntegerField()),
                ('is_plural', models.BooleanField(default=False)),
            ],
            options={
                'unique_together': {('nom_pronoun_de', 'case', 'person', 'is_plural')},
            },
        ),
        migrations.CreateModel(
            name='NounPluralizationGuess_RevLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('duration', models.IntegerField(null=True)),
                ('rating', models.IntegerField(null=True)),
                ('noun', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='flashcards.noun')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NounGenderGuess_RevLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('duration', models.IntegerField(null=True)),
                ('rating', models.IntegerField(null=True)),
                ('noun', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='flashcards.noun')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_de', models.CharField(max_length=10)),
                ('article_en', models.CharField(max_length=10)),
                ('case', models.CharField(max_length=3)),
                ('gender', models.CharField(max_length=1)),
                ('definite', models.BooleanField()),
            ],
            options={
                'unique_together': {('case', 'gender', 'definite')},
            },
        ),
    ]
